{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Form/Form.module.css","components/Header/Header.module.css","components/ContactList/ContactList.module.css","components/Form/Form.jsx","components/Header/Header.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["module","exports","Form","state","inputName","number","handleInputChange","e","setState","currentTarget","value","handleInputChangeNumber","handleAdd","console","log","handleSubmit","preventDefault","contact","id","nanoid","name","props","onSubmit","resetForm","this","htmlFor","type","pattern","title","required","onChange","className","s","button","onClick","Component","Header","ContactItem","deleteContact","item","href","ContactList","contacts","base","map","Filter","App","filter","addContact","newContact","find","alert","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8828d433.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2KdFa\",\"name\":\"ContactItem_name__1bT_p\",\"number\":\"ContactItem_number__f5Ixf\",\"button\":\"ContactItem_button__1siMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__3SH2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ContactList_base__27RLo\"};","import React, { Component } from \"react\";\nimport s from \"./Form.module.css\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nclass Form extends Component {\n  state = {\n    inputName: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ inputName: e.currentTarget.value });\n  };\n\n  handleInputChangeNumber = (e) => {\n    this.setState({ number: e.currentTarget.value });\n  };\n\n  handleAdd = () => {\n    console.log(\"my hanlerAdd\", this);\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: nanoid(),\n      name: this.state.inputName,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n\n    this.resetForm();\n  };\n  resetForm = () => {\n    this.setState({\n      id: \"\",\n      inputName: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { inputName, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor={this.id}>Name</label>\n        </div>\n        <div>\n          <input\n            type=\"name\"\n            name=\"inputValue\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.id}\n            value={inputName}\n            onChange={this.handleInputChange}\n          />\n        </div>\n        <br></br>\n        <div>\n          <label htmlFor={this.id}>Number</label>\n        </div>\n        <div>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.id}\n            value={number}\n            onChange={this.handleInputChangeNumber}\n          />\n        </div>\n        <br></br>\n        <div>\n          <label>\n            <button className={s.button} type=\"submit\" onClick={this.handleAdd}>\n              add Contact {}\n            </button>\n          </label>\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  inputName: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport s from './Header.module.css'; \nimport PropTypes from 'prop-types';\n\nconst Header = ({title}) => {\n   return (\n          <h1 className={s.title}>{title}</h1>\n        );\n}\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n\nexport default Header;","import React, { Component } from 'react';\nimport s from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\n\nclass ContactItem extends Component {\n\n    render(){\n        const { contact,  deleteContact } = this.props;\n        return (\n          <li className={s.item}>\n          <span className={s.name}>{contact.name}: </span>\n          <a href={`tel:${contact.number}`} className={s.number}>\n            {contact.number}\n          </a>\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() =>  deleteContact(contact.id)} // Метод на клике, принимает ID контакта\n          >\n            Delete\n          </button>\n        </li>\n          \n        );\n    };\n\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object,\n  deleteContact: PropTypes.func.isRequired,\n\n};\n\n  export default ContactItem;","import ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact}) => {\n  return (\n    <ul className={s.base}>\n      {contacts().map(contact => (\n        <ContactItem\n          contact={contact}\n          deleteContact={deleteContact}\n          key={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contact: PropTypes.object,\n  deleteContact: PropTypes.func.isRequired,\n\n};\n\n export default ContactList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({value, onChange}) => {\n     return (\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport Header from \"./components/Header/Header\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    // Проверка на дубликат\n    const duplicateName = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    if (duplicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  // Следит за полем фильтрации и пишет в стейт\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  // Удаляет контакт\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <Header title=\"Phonebook\" />\n        <Form onSubmit={this.addContact} />\n        <Header title=\"Contacts\" />\n        <Filter value={this.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  contact: PropTypes.array,\n  filter: PropTypes.node,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}